{"version":3,"file":"entry-point-transforms.js","sourceRoot":"","sources":["../../../src/lib/steps/entry-point-transforms.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'path';\nimport { NgArtefacts } from '../ng-package-format/artefacts';\nimport { NgEntryPoint } from '../ng-package-format/entry-point';\nimport { NgPackage } from '../ng-package-format/package';\nimport { BuildStep } from '../deprecations';\nimport { writePackage } from '../steps/package';\nimport { processAssets } from '../steps/assets';\nimport { ngc, prepareTsConfig, collectTemplateAndStylesheetFiles, inlineTemplatesAndStyles } from '../steps/ngc';\nimport { minifyJsFile } from '../steps/uglify';\nimport { remapSourceMap, relocateSourceMapSources } from '../steps/sorcery';\nimport { flattenToFesm15, flattenToUmd } from '../steps/rollup';\nimport { downlevelWithTsc } from '../steps/tsc';\nimport { copySourceFilesToDestination } from '../steps/transfer';\nimport * as log from '../util/log';\nimport { ensureUnixPath } from '../util/path';\nimport { rimraf } from '../util/rimraf';\n\n/**\n * Transforms TypeScript source files to Angular Package Format.\n *\n * @param entryPoint The entry point that will be transpiled to a set of artefacts.\n */\nexport const transformSources: BuildStep =\n  async (args): Promise<void> => {\n    const { artefacts, entryPoint, pkg } = args;\n    log.info(`Building from sources for entry point '${entryPoint.moduleId}'`);\n\n    // 0. CLEAN BUILD DIRECTORY\n    log.info('Cleaning build directory');\n    await rimraf(artefacts.outDir);\n    await rimraf(artefacts.stageDir);\n\n    // 1. TWO-PASS TSC TRANSFORMATION\n    prepareTsConfig(args);\n\n    // First pass: collect templateUrl and styleUrls referencing source files.\n    log.info('Extracting templateUrl and styleUrls');\n    collectTemplateAndStylesheetFiles(args);\n\n    // Then, process assets keeping transformed contents in memory.\n    log.info('Processing assets');\n    await processAssets(args);\n\n    // Second pass: inline templateUrl and styleUrls\n    log.info('Inlining templateUrl and styleUrls');\n    inlineTemplatesAndStyles(args);\n\n    // 2. NGC\n    log.info('Compiling with ngc');\n    const tsOutput = await ngc(entryPoint, artefacts);\n    artefacts.es2015EntryFile = tsOutput.js;\n    artefacts.typingsEntryFile = tsOutput.typings;\n    artefacts.aotBundleFile = tsOutput.metadata;\n\n    // 3. FESM15: ROLLUP\n    log.info('Bundling to FESM15');\n    await flattenToFesm15(args);\n    await remapSourceMap(artefacts.fesm15BundleFile);\n\n    // 4. FESM5: TSC\n    log.info('Bundling to FESM5');\n    const fesm5File = path.resolve(artefacts.stageDir, 'esm5', entryPoint.flatModuleFile + '.js');\n    await downlevelWithTsc(artefacts.fesm15BundleFile, fesm5File);\n    artefacts.fesm5BundleFile = fesm5File;\n    await remapSourceMap(fesm5File);\n\n    // 5. UMD: ROLLUP\n    log.info('Bundling to UMD');\n    await flattenToUmd(args);\n    await remapSourceMap(artefacts.umdBundleFile);\n\n    // 6. UMD: Minify\n    log.info('Minifying UMD bundle');\n    const minUmdFile: string = await minifyJsFile(artefacts.umdBundleFile);\n    await remapSourceMap(minUmdFile);\n\n    // 7. SOURCEMAPS: RELOCATE ROOT PATHS\n    log.info('Remapping source maps');\n    await relocateSourceMapSources({ artefacts, entryPoint });\n\n    // 8. COPY SOURCE FILES TO DESTINATION\n    log.info('Copying staged files');\n    // TODO: doesn't work any more\n    await copySourceFilesToDestination({ artefacts, entryPoint, pkg });\n\n    // 9. WRITE PACKAGE.JSON\n    log.info('Writing package metadata');\n    // TODO: doesn't work any more .... path.relative(secondary.basePath, primary.basePath);\n    const relativeDestPath: string = path.relative(entryPoint.destinationPath, pkg.primary.destinationPath);\n    await writePackage(entryPoint, {\n      main: ensureUnixPath(path.join(relativeDestPath, 'bundles', entryPoint.flatModuleFile + '.umd.js')),\n      module: ensureUnixPath(path.join(relativeDestPath, 'esm5', entryPoint.flatModuleFile + '.js')),\n      es2015: ensureUnixPath(path.join(relativeDestPath, 'esm2015', entryPoint.flatModuleFile + '.js')),\n      typings: ensureUnixPath(`${entryPoint.flatModuleFile}.d.ts`),\n      // XX 'metadata' property in 'package.json' is non-standard. Keep it anyway?\n      metadata: ensureUnixPath(`${entryPoint.flatModuleFile}.metadata.json`)\n    });\n\n    log.success(`Built ${entryPoint.moduleId}`);\n  }\n"]}