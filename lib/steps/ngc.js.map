{"version":3,"file":"ngc.js","sourceRoot":"","sources":["../../../src/lib/steps/ngc.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport * as ng from '@angular/compiler-cli';\n// XX: has or is using name 'ParsedConfiguration' ... but cannot be named\nimport { ParsedConfiguration } from '@angular/compiler-cli';\nimport * as ts from 'typescript';\nimport { NgArtefacts } from '../ng-package-format/artefacts';\nimport { NgEntryPoint } from '../ng-package-format/entry-point';\nimport { NgPackage } from '../ng-package-format/package';\nimport { BuildStep } from '../deprecations';\nimport * as log from '../util/log';\n// XX: internal in ngc's `main()`, a tsickle emit callback is passed to the tsc compiler\n// ... blatanlty copy-paste the emit callback here. it's not a public api.\n// ... @link https://github.com/angular/angular/blob/24bf3e2a251634811096b939e61d63297934579e/packages/compiler-cli/src/main.ts#L36-L38\nimport { createEmitCallback } from '../util/ngc-patches';\nimport { componentTransformer } from '../util/ts-transformers';\n\n/** TypeScript configuration used internally (marker typer). */\nexport type TsConfig = ng.ParsedConfiguration;\n\n/** Prepares TypeScript Compiler and Angular Compiler option. */\nexport const prepareTsConfig: BuildStep =\n  ({ artefacts, entryPoint, pkg }) => {\n    const basePath = path.dirname(entryPoint.entryFilePath);\n\n    // Read the default configuration and overwrite package-specific options\n    const tsConfig = ng.readConfiguration(path.resolve(__dirname, '..', 'conf', 'tsconfig.ngc.json'));\n    tsConfig.rootNames = [ entryPoint.entryFilePath ];\n    tsConfig.options.flatModuleId = entryPoint.moduleId\n    tsConfig.options.flatModuleOutFile = `${entryPoint.flatModuleFile}.js`;\n    tsConfig.options.basePath = basePath;\n    tsConfig.options.baseUrl = basePath;\n    tsConfig.options.rootDir = basePath;\n    tsConfig.options.outDir = artefacts.outDir;\n    tsConfig.options.genDir = artefacts.outDir;\n\n    switch (entryPoint.jsxConfig) {\n      case 'preserve':\n        tsConfig.options.jsx = ts.JsxEmit.Preserve;\n        break;\n      case 'react':\n        tsConfig.options.jsx = ts.JsxEmit.React;\n        break;\n      case 'react-native':\n        tsConfig.options.jsx = ts.JsxEmit.ReactNative;\n        break;\n      default:\n        break;\n    }\n\n    artefacts.tsConfig = tsConfig;\n  }\n\n/** Transforms TypeScript AST */\nconst transformSources =\n  (tsConfig: TsConfig, transformers: ts.TransformerFactory<ts.SourceFile>[]): ts.TransformationResult<ts.SourceFile> => {\n    const compilerHost: ng.CompilerHost = ng.createCompilerHost({\n      options: tsConfig.options\n    });\n    const program: ng.Program = ng.createProgram({\n      rootNames: [ ...tsConfig.rootNames ],\n      options: tsConfig.options,\n      host: compilerHost\n    });\n\n    const sourceFiles = program.getTsProgram().getSourceFiles();\n    const transformationResult: ts.TransformationResult<ts.SourceFile> = ts.transform(\n      // XX: circumvent tsc compile error in 2.6\n      Array.from(sourceFiles as any as ts.SourceFile[]),\n      transformers,\n      tsConfig.options\n    );\n\n    return transformationResult;\n  }\n\n//const compilerHostFromTransformation =\n//  ({transformation, options}: {transformation: ts.TransformationResult<ts.SourceFile>, options: ts.CompilerOptions}): ts.CompilerHost => {\n\nconst compilerHostFromArtefacts =\n  (artefacts: NgArtefacts) => {\n    const wrapped = ts.createCompilerHost(artefacts.tsConfig.options);\n\n    return {\n      ...wrapped,\n      getSourceFile: (fileName, version) => {\n        const inTransformation = artefacts.tsSources.transformed\n          .find((file) => file.fileName === fileName);\n\n        if (inTransformation) {\n          // FIX see https://github.com/Microsoft/TypeScript/issues/19950\n          if (!inTransformation['ambientModuleNames']) {\n            inTransformation['ambientModuleNames'] = inTransformation['original']['ambientModuleNames'];\n          }\n\n          // FIX synthesized source files cause ngc/tsc/tsickle to chock\n          if ((inTransformation.flags & 8) !== 0) {\n            const sourceText = artefacts.extras<SynthesizedSourceFile>(`ts:${inTransformation.fileName}`).writeSourceText();\n\n            return ts.createSourceFile(\n              inTransformation.fileName,\n              sourceText,\n              inTransformation.languageVersion,\n              true,\n              ts.ScriptKind.TS\n            );\n          }\n\n          return inTransformation;\n        } else {\n          return wrapped.getSourceFile(fileName, version);\n        }\n      },\n      getSourceFileByPath: (fileName, path, languageVersion) => {\n        console.warn(\"getSourceFileByPath\");\n\n        return wrapped.getSourceFileByPath(fileName, path, languageVersion);\n      }\n    };\n  }\n\n/** Extracts templateUrl and styleUrls from `@Component({..})` decorators. */\nexport const collectTemplateAndStylesheetFiles: BuildStep =\n  ({ artefacts, entryPoint, pkg }) => {\n    const tsConfig = artefacts.tsConfig;\n\n    const collector = componentTransformer({\n      templateProcessor: (a, b, templateFilePath) => {\n        artefacts.template(templateFilePath, null);\n      },\n      stylesheetProcessor: (a, b, styleFilePath) => {\n        artefacts.stylesheet(styleFilePath, null);\n      }\n    });\n\n    artefacts.tsSources = transformSources(\n      tsConfig,\n      [ collector ]\n    );\n  }\n\nclass SynthesizedSourceFile {\n\n  private replacemenets: { from: number, to: number, text: string}[] = [];\n\n  constructor(\n    private original: ts.SourceFile\n  ) {}\n\n  addReplacement(replacement: { from: number, to: number, text: string}) {\n    this.replacemenets.push(replacement);\n  }\n\n  public writeSourceText(): string {\n    const originalSource = this.original.getFullText();\n\n    let newSource = '';\n    let position = 0;\n    for (let replacement of this.replacemenets) {\n      newSource = newSource.concat(originalSource.substring(position, replacement.from))\n        .concat(replacement.text);\n      position = replacement.to;\n    }\n    newSource = newSource.concat(originalSource.substring(position));\n\n    return newSource;\n  }\n\n}\n\n/** Transforms templateUrl and styleUrls in `@Component({..})` decorators. */\nexport const inlineTemplatesAndStyles: BuildStep =\n  ({ artefacts, entryPoint, pkg }) => {\n    const tsConfig = artefacts.tsConfig;\n    // inline contents from artefacts set (generated in a previous step)\n    const transformer = componentTransformer({\n      templateProcessor: (a, b, templateFilePath) => artefacts.template(templateFilePath) || '',\n      stylesheetProcessor: (a, b, styleFilePath) => artefacts.stylesheet(styleFilePath) || '',\n      sourceFileWriter: (sourceFile, node, synthesizedSourceText) => {\n        const key = `ts:${sourceFile.fileName}`;\n\n        const synthesizedSourceFile = artefacts.extras<SynthesizedSourceFile>(key) || new SynthesizedSourceFile(sourceFile);\n        synthesizedSourceFile.addReplacement({\n          from: node.getStart(),\n          to: node.getEnd(),\n          text: synthesizedSourceText\n        });\n\n        artefacts.extras(key, synthesizedSourceFile);\n      }\n    });\n\n    artefacts.tsSources = ts.transform(\n      artefacts.tsSources.transformed,\n      [ transformer ]\n    );\n  }\n\n/**\n * Compiles typescript sources with 'ngc'.\n *\n * @param entryPoint Angular package data\n * @returns Promise<{}> Pathes of the flatModuleOutFile\n */\nexport async function ngc(entryPoint: NgEntryPoint, artefacts: NgArtefacts) {\n  log.debug(`ngc (v${ng.VERSION.full}): ${entryPoint.entryFile}`);\n\n  // ng.CompilerHost\n  const tsConfig = artefacts.tsConfig;\n  const ngCompilerHost = ng.createCompilerHost({\n    options: tsConfig.options,\n    tsHost: compilerHostFromArtefacts(artefacts)\n  });\n\n  // ng.Program\n  const ngProgram = ng.createProgram({\n    rootNames: [ ...tsConfig.rootNames ],\n    options: tsConfig.options,\n    host: ngCompilerHost\n  });\n\n  // ngc\n  const result = ng.performCompilation({\n    rootNames: [ ...tsConfig.rootNames ],\n    options: tsConfig.options,\n    emitFlags: tsConfig.emitFlags,\n    emitCallback: createEmitCallback(tsConfig.options),\n    host: ngCompilerHost,\n    oldProgram: ngProgram\n  });\n\n  const exitCode = ng.exitCodeFromResult(result.diagnostics);\n  if (exitCode === 0) {\n    const outDir = tsConfig.options.outDir;\n    const outFile = tsConfig.options.flatModuleOutFile;\n    const extName = path.extname(outFile);\n\n    artefacts.tsSources.dispose();\n\n    return Promise.resolve({\n      js: path.resolve(outDir, outFile),\n      metadata: path.resolve(outDir, outFile.replace(extName, '.metadata.json')),\n      typings: path.resolve(outDir, outFile.replace(extName, '.d.ts'))\n    });\n  } else {\n    return Promise.reject(new Error(\n      ng.formatDiagnostics(result.diagnostics)\n    ));\n  }\n}\n"]}